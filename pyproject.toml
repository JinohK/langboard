[tool.poetry]
name = "langboard"
version = "0.1.0"
description = ""
authors = ["Yamon <battlecruser@yamon.io>"]
readme = "README.md"
packages = [{include = "langboard", from = "src/backend"}]
include = ["src/backend/langboard/*", "src/backend/langboard/**/*"]


[tool.poetry.scripts]
langboard = 'langboard.CLI:execute'


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
fastapi = "^0.115.4"
pydantic = "^2.10.3"
socketify = "^0.0.31"
routes = "^2.5.1"
python-multipart = "^0.0.17"
sqlalchemy = "^2.0.32"
alembic = "^1.13.2"
sqlmodel = "^0.0.22"
bcrypt = "^4.2.1"
cryptocode = "^0.1"
pyjwt = "^2.10.1"
redis = "^5.2.1"
boto3 = "^1.35.76"
aiosqlite = "^0.20.0"
asyncpg = "^0.30.0"
watchdog = "^6.0.0"
httpx = "^0.27.2"
anyio = "^4.6.2"
requests = "^2.32.3"
celery = "^5.4.0"
fastapi-mail = "^1.4.2"
sentry-sdk = {extras = ["fastapi"], version = "^2.22.0"}
genson = "^1.3.0"
argcomplete = "^3.5.3"
inflect = "^5.6.2"
pyyaml = "^6.0.2"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
rich = "^13.8.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
ruff = "^0.7.4"
boto3-stubs = {extras = ["s3"], version = "^1.35.76"}


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["Test*.py"]
console_output_style = "progress"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = ["ignore::DeprecationWarning", "ignore::ResourceWarning"]
log_cli = true
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"


[tool.coverage.report]
omit = [
    "**/__init__.py",
]



[tool.ruff]
line-length = 120
exclude = ["migrations"]
lint.extend-select = ["I"]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"


[tool.ruff.lint.isort]
lines-after-imports = 2
no-lines-before = ["future", "standard-library", "third-party", "first-party", "local-folder"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
