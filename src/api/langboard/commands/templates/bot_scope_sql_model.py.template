from enum import Enum
from typing import Any
from core.db import SnowflakeIDField
from core.types import SnowflakeID
from sqlmodel import Field
from .bases import BaseBotScopeModel, BotTriggerCondition


class {class_name}BotScope(BaseBotScopeModel, table=True):
    

    @staticmethod
    def get_available_conditions() -> set[BotTriggerCondition]:
        return {empty_dict}

    @staticmethod
    def get_scope_column_name() -> str:
        return ""

    @staticmethod
    def api_schema(schema: dict | None = None) -> dict[str, Any]:
        return BaseBotScopeModel.api_schema({sb}
            **(schema or {empty_dict}),
        {eb})

    def api_response(self) -> dict[str, Any]:
        return {sb}
            **(super().api_response()),
        {eb}