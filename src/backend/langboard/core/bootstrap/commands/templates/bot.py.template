from typing import Any, Literal
from ..core.ai import BaseBot, BotType, LangchainStreamResponse, LangflowStreamResponse, create_bot_data_model


class {bot_type}Bot(BaseBot):
    @staticmethod
    def bot_type() -> Literal[BotType.{bot_type}]:
        """DO NOT EDIT THIS METHOD"""
        return BotType.{bot_type}

    @staticmethod
    def bot_name() -> str:
        return "Bot Name"

    async def run(self, data: dict[str, Any]) -> str | LangchainStreamResponse | LangflowStreamResponse | None:
        data_model = create_bot_data_model({bot_type}Bot.bot_type(), data)
        # Do something

        # langchain output must be includes "response" field
        # return await self._send_langchain(runnable=Runnable[Input, LangchainOutput], input=..., use_stream=True or False)
        # return await self._send_langflow_chat(flow_id="", message=..., use_stream=True or False)

    async def is_available(self) -> bool:
        # If using langchain,
        # return True
        # If using langflow,
        # return await self._is_langflow_available()
