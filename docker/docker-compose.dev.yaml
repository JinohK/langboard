name: ${PROJECT_NAME}

services:
  server:
    container_name: ${PROJECT_NAME}_server
    image: nginx:latest
    ports:
      - "${NGINX_FRONTEND_EXPOSE_PORT}:8000"
      - "${NGINX_SOCKET_EXPOSE_PORT}:8010"
      - "${NGINX_API_EXPOSE_PORT}:8020"
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - FRONTEND_HOST=${PROJECT_NAME}_frontend:${FRONTEND_PORT}
      - BACKEND_HOST=${PROJECT_NAME}_backend:${BACKEND_PORT}
    volumes:
      - ./server/dev.conf.template:/etc/nginx/templates/default.conf.template
      - ./server/nginx.conf:/etc/nginx/nginx.conf
    command: [nginx-debug, "-g", "daemon off;"]
    networks:
      - dev_net
    restart: always

  frontend:
    container_name: ${PROJECT_NAME}_frontend
    build:
      context: ../src/frontend
    environment:
      - ENVIRONMENT=development
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_SHORT_NAME=${PROJECT_SHORT_NAME}
      - SOCKET_URL=${SOCKET_URL}
      - API_URL=${API_URL}
    working_dir: /app
    volumes:
      - ../src/frontend/src:/app/src
      - ../src/frontend/vite.config.ts:/app/vite.config.ts
      - ../src/frontend/tailwind.config.js:/app/tailwind.config.js
      - ../src/frontend/postcss.config.js:/app/postcss.config.js
    networks:
      - dev_net
    restart: always

  backend:
    container_name: ${PROJECT_NAME}_backend
    build:
      context: ../src/backend
    environment:
      - ENVIRONMENT=development
      - PROJECT_NAME=${PROJECT_NAME}
      - BACKEND_HOST=${PROJECT_NAME}_backend
      - BACKEND_PORT=${BACKEND_PORT}
      - MAIN_DATABASE_URL=postresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PROJECT_NAME}_db:${MASTER_POSTGRES_PORT}/${POSTGRES_DB}
      - MAIN_DATABASE_ROLE=${MAIN_DATABASE_ROLE}
      - SUB_DATABASE_URL=postresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PROJECT_NAME}_db_replica:${REPLICA_POSTGRES_PORT}/${POSTGRES_DB}
      - SUB_DATABASE_ROLE=${SUB_DATABASE_ROLE}
      - TERMINAL_LOGGING_LEVEL=${TERMINAL_LOGGING_LEVEL}
      - FILE_LOGGING_LEVEL=${FILE_LOGGING_LEVEL}
      - LOGGING_DIR=${LOGGING_DIR}
    working_dir: /app
    command: pypy3 -m ${PROJECT_NAME}
    volumes:
      - ../src/backend/${PROJECT_NAME}:/app/${PROJECT_NAME}
      - ../src/backend/requirements.txt:/app/requirements.txt
    networks:
      - dev_net
    restart: always

  db:
    image: postgres:latest
    container_name: ${PROJECT_NAME}_db
    ports:
      - ${MASTER_POSTGRES_PORT}:5432
    environment:
      - POSTGRES_LOG_HOSTNAME=true
      - POSTGRES_REPLICATION_MODE=master
      - POSTGRES_REPLICATION_USER=${POSTGRES_REPLICATION_USER}
      - POSTGRES_REPLICATION_PASSWORD=${POSTGRES_REPLICATION_PASSWORD}
      - POSTGRES_USERNAME=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DB}
      - TZ=UTC
      - PGTZ=UTC
    volumes:
      - ./volumes/db:/var/lib/postgresql/data:Z
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dev_net
    restart: always

  db-replica:
    image: postgres:latest
    container_name: ${PROJECT_NAME}_db_replica
    ports:
      - ${REPLICA_POSTGRES_PORT}:5432
    environment:
      - POSTGRES_LOG_HOSTNAME=true
      - POSTGRES_REPLICATION_MODE=slave
      - POSTGRES_REPLICATION_USER=${POSTGRES_REPLICATION_USER}
      - POSTGRES_REPLICATION_PASSWORD=${POSTGRES_REPLICATION_PASSWORD}
      - POSTGRES_MASTER_HOST=${PROJECT_NAME}_db
      - POSTGRES_MASTER_PORT_NUMBER=${MASTER_POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DB}
      - TZ=UTC
      - PGTZ=UTC
    networks:
      - dev_net
    depends_on:
      - db
    restart: always

  db-backup:
    image: postgres:latest
    container_name: ${PROJECT_NAME}_db_backup
    environment:
      - POSTGRES_LOG_HOSTNAME=true
      - POSTGRES_REPLICATION_MODE=backup
      - POSTGRES_REPLICATION_USER=${POSTGRES_REPLICATION_USER}
      - POSTGRES_REPLICATION_PASSWORD=${POSTGRES_REPLICATION_PASSWORD}
      - POSTGRES_MASTER_HOST=${PROJECT_NAME}_db
      - POSTGRES_MASTER_PORT_NUMBER=${MASTER_POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DB}
      - TZ=UTC
      - PGTZ=UTC
    volumes:
      - ./volumes/db_backup:/backup:Z
      - ./db/backup.sh:/docker-entrypoint-initdb.d/backup.sh
    networks:
      - dev_net
    depends_on:
      - db
    restart: always

networks:
  dev_net:
    driver: bridge
    ipam:
      driver: default