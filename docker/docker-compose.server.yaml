services:
  server:
    init: true
    container_name: ${PROJECT_NAME}_server
    image: nginx:latest
    ports:
      - "${NGINX_FRONTEND_EXPOSE_PORT}:8000"
      - "${NGINX_SOCKET_EXPOSE_PORT}:8010"
      - "${NGINX_API_EXPOSE_PORT}:8020"
      - "${DOCS_EXPOSE_PORT}:8030"
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - BACKEND_HOST=${PROJECT_NAME}_backend:${BACKEND_PORT}
      - SOCKET_HOST=${PROJECT_NAME}_socket:${SOCKET_PORT}
    volumes:
      - ./server/conf.template:/etc/nginx/templates/default.conf.template
      - ./server/nginx.conf:/etc/nginx/nginx.conf
      - ../src/frontend/dist:/usr/share/nginx/html
    command: [nginx-debug, "-g", "daemon off;"]
    depends_on:
      - frontend
      - backend
    networks:
      - net
    restart: always

  frontend:
    init: true
    container_name: ${PROJECT_NAME}_frontend
    build:
      context: ../src/frontend
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_SHORT_NAME=${PROJECT_SHORT_NAME}
      - SOCKET_URL=${SOCKET_URL}
      - API_URL=${API_URL}
      - PUBLIC_FRONTEND_URL=${PUBLIC_FRONTEND_URL}
    working_dir: /app
    command: yarn build
    volumes:
      - ../src/frontend/src:/app/src
      - ../src/frontend/dist:/app/dist:rw
      - ../src/frontend/vite.config.ts:/app/vite.config.ts
      - ../src/frontend/tailwind.config.js:/app/tailwind.config.js
      - ../src/frontend/postcss.config.js:/app/postcss.config.js
      - ../.env:/app/.env
    networks:
      - net

  backend: &backend
    init: true
    container_name: ${PROJECT_NAME}_backend
    build:
      context: ../
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_SHORT_NAME=${PROJECT_SHORT_NAME}
      - BACKEND_HOST=${PROJECT_NAME}_backend
      - BACKEND_PORT=${BACKEND_PORT}
      - TERMINAL_LOGGING_LEVEL=${TERMINAL_LOGGING_LEVEL}
      - FILE_LOGGING_LEVEL=${FILE_LOGGING_LEVEL}
      - LOGGING_DIR=${LOGGING_DIR}
      - CRON_TAB_FILE=${CRON_TAB_FILE}
      - SENTRY_DSN=${SENTRY_DSN}
      - MAIN_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PROJECT_NAME}_db_bouncer:6432/master
      - READONLY_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PROJECT_NAME}_db_bouncer:6432/readonly
      - DB_TIMEOUT=${DB_TIMEOUT}
      - DB_TCP_USER_TIMEOUT=${DB_TCP_USER_TIMEOUT}
      - CACHE_TYPE=redis
      - CACHE_URL=redis://:${REDIS_PASSWORD}@${PROJECT_NAME}_redis:6379/0
      - BROADCAST_TYPE=kafka
      - BROADCAST_URLS=${PROJECT_NAME}_kafka0:9092,${PROJECT_NAME}_kafka1:9092,${PROJECT_NAME}_kafka2:9092
      - COMMON_SECRET_KEY=${COMMON_SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_AT_EXPIRATION=${JWT_AT_EXPIRATION}
      - JWT_RT_EXPIRATION=${JWT_RT_EXPIRATION}
      - LOCAL_STORAGE_DIR=${LOCAL_STORAGE_DIR}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_REGION_NAME=${S3_REGION_NAME}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - FRONTEND_PORT=${NGINX_FRONTEND_EXPOSE_PORT}
      - PUBLIC_FRONTEND_URL=${PUBLIC_FRONTEND_URL}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_STARTTLS=${MAIL_STARTTLS}
      - MAIL_SSL_TLS=${MAIL_SSL_TLS}
    working_dir: /app
    command: ${PROJECT_NAME} run --workers ${BACKEND_WORKERS_COUNT:-1}
    volumes:
      - ../src/backend/${PROJECT_NAME}:/app/src/backend/${PROJECT_NAME}
      - ../src/resources:/app/src/resources
      - ../pyproject.toml:/app/pyproject.toml
      - ../poetry.lock:/app/poetry.lock
      - ../README.md:/app/README.md
      - ../LICENSE:/app/LICENSE
      - ../alembic.ini:/app/alembic.ini
      - ../local:/app/local
      - ../scripts/run_bot_cron.sh:/app/scripts/run_bot_cron.sh:x
    depends_on:
      - db-bouncer
      - kafka0
      - kafka1
      - kafka2
    networks:
      - net
    restart: always

  celeryworker:
    <<: *backend
    init: true
    container_name: ${PROJECT_NAME}_celeryworker
    command: langboard run:broker

  socket:
    init: true
    container_name: ${PROJECT_NAME}_socket
    build:
      context: ../src/socket
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_SHORT_NAME=${PROJECT_SHORT_NAME}
      - SERVER_HOST=${PROJECT_NAME}_socket
      - SOCKET_PORT=${SOCKET_PORT}
      - TERMINAL_LOGGING_LEVEL=${TERMINAL_LOGGING_LEVEL}
      - FILE_LOGGING_LEVEL=${FILE_LOGGING_LEVEL}
      - LOGGING_DIR=${LOGGING_DIR}
      - MAIN_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PROJECT_NAME}_db_bouncer:6432/master
      - READONLY_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PROJECT_NAME}_db_bouncer:6432/readonly
      - DB_TIMEOUT=${DB_TIMEOUT}
      - DB_TCP_USER_TIMEOUT=${DB_TCP_USER_TIMEOUT}
      - CACHE_TYPE=redis
      - CACHE_URL=redis://:${REDIS_PASSWORD}@${PROJECT_NAME}_redis:6379/0
      - BROADCAST_TYPE=kafka
      - BROADCAST_URLS=${PROJECT_NAME}_kafka0:9092,${PROJECT_NAME}_kafka1:9092,${PROJECT_NAME}_kafka2:9092
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - PUBLIC_FRONTEND_URL=${PUBLIC_FRONTEND_URL}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_SSL_TLS=${MAIL_SSL_TLS}
    working_dir: /app
    volumes:
      - ../src/socket/package.json:/app/package.json
      - ../src/socket/yarn.lock:/app/yarn.lock
      - ../src/resources:/app/resources
      - ../.env:/app/.env
    depends_on:
      - db-bouncer
      - kafka0
      - kafka1
      - kafka2
    networks:
      - net
    restart: always
